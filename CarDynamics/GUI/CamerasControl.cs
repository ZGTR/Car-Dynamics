/*
 *Generated by FuchsGUICodeGenerator
 *Ghoshehsoft@live.com
 *www.ghoshehsoft.wordpress.com
 *Time of generation: 2/7/2011 4:53:19 AM
*/

using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Content;

using FuchsGUI;

namespace GUI
{
    public sealed class CamerasControl : Form
    {
        ContentManager contentManager;

        #region Fields

        public Button FreeCamera;
        public Form FreeCameraGroup;
        public Button ShowRightWheel;
        public Button ShowLeftWheel;
        public Form WheelCameraGroup;
        public Button CamerasControlGroupHide;
        public Button ZoomIn;
        public Button DrivingInfrontOfTheCar;
        public Button ZoomOut;
        public Button DrivingInsideTheCar;
        public Label label1;
        public Button DrivingBehindTheCar;
        public Form ChaseCameraGroup;

        #endregion

        public CamerasControl(Texture2D texture, SpriteFont font, Color foreColor, ContentManager contentManager)
            : base("CamerasControlGroup", "Cameras Control", new Rectangle(0, 12, 300, 750), texture, font, foreColor, null)
        {
            this.contentManager = contentManager;
            this.AddControls();
        }

        void AddControls()
        {
            Texture2D texButton = contentManager.Load<Texture2D>(@"GUI\texButton");
            Texture2D texForm = contentManager.Load<Texture2D>(@"GUI\texForm");


            FreeCameraGroup = new Form("FreeCameraGroup", @"Free Camera", new Rectangle(26, 405, 194, 66), null, font, new Color(0, 0, 0), null);
            FreeCamera = new Button("FreeCamera", @"Select Free Camera", new Rectangle(22, 19, 157, 32), texButton, font, new Color(0, 0, 0), null);
            FreeCameraGroup.AddControl(FreeCamera);

            this.AddControl(FreeCameraGroup);

            WheelCameraGroup = new Form("WheelCameraGroup", @"Wheel Camera", new Rectangle(26, 266, 194, 122), null, font, new Color(0, 0, 0), null);
            ShowRightWheel = new Button("ShowRightWheel", @"Show Right Wheel", new Rectangle(22, 34, 157, 32), texButton, font, new Color(0, 0, 0), null);
            WheelCameraGroup.AddControl(ShowRightWheel);

            ShowLeftWheel = new Button("ShowLeftWheel", @"Show Left Wheel", new Rectangle(22, 72, 157, 32), texButton, font, new Color(0, 0, 0), null);
            WheelCameraGroup.AddControl(ShowLeftWheel);

            this.AddControl(WheelCameraGroup);

            CamerasControlGroupHide = new Button("CamerasControlGroupHide", @"Hide", new Rectangle(262, 368, 36, 26), texButton, font, new Color(0, 0, 0), null);
            this.AddControl(CamerasControlGroupHide);

            ChaseCameraGroup = new Form("ChaseCameraGroup", @"Chase Camera", new Rectangle(26, 36, 194, 224), null, font, new Color(0, 0, 0), null);
            ZoomIn = new Button("ZoomIn", @"Zoom In", new Rectangle(104, 174, 75, 32), texButton, font, new Color(0, 0, 0), null);
            ChaseCameraGroup.AddControl(ZoomIn);

            DrivingInfrontOfTheCar = new Button("DrivingInfrontOfTheCar", @"Driving In front Of The Car", new Rectangle(22, 95, 157, 32), texButton, font, new Color(0, 0, 0), null);
            ChaseCameraGroup.AddControl(DrivingInfrontOfTheCar);

            ZoomOut = new Button("ZoomOut", @"Zoom Out", new Rectangle(22, 174, 75, 32), texButton, font, new Color(0, 0, 0), null);
            ChaseCameraGroup.AddControl(ZoomOut);

            DrivingInsideTheCar = new Button("DrivingInsideTheCar", @"Driving Inside The Car    ", new Rectangle(22, 57, 157, 32), texButton, font, new Color(0, 0, 0), null);
            ChaseCameraGroup.AddControl(DrivingInsideTheCar);

            label1 = new Label("label1", @"Chase Distance", new Vector2(22, 143), font, new Color(0, 0, 0), 0, 0, null);
            ChaseCameraGroup.AddControl(label1);

            DrivingBehindTheCar = new Button("DrivingBehindTheCar", @"Driving Behind The Car ", new Rectangle(22, 19, 157, 32), texButton, font, new Color(0, 0, 0), null);
            ChaseCameraGroup.AddControl(DrivingBehindTheCar);

            this.AddControl(ChaseCameraGroup);


        }
    }
}